plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
	id 'jacoco'
}

group = 'nl.fontys.s3'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


jacocoTestReport{
	dependsOn test
	reports{
		xml.required = true
		html.required = true
		csv.required = true
	}
}

tasks.named('sonar').configure {
	dependsOn jacocoTestReport
}

test{
	useJUnitPlatform()
	finalizedBy('jacocoTestReport')
}

dependencies {
	//Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	//Database
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'com.h2database:h2'
	implementation 'mysql:mysql-connector-java:8.0.33'
	//WebMVC
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	//Others
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

sonar {
	properties {
		property("sonar.projectKey", "s3_Individual_News")
		property("sonar.projectName", "'s3_Individual_News'")
		property("sonar.host.url","http://localhost:9000")
		property("sonar.token","sqp_26694e07ba858979d88a86252394f9964e7ce8e4")
		property("sonar.coverage.exclusions","**/controller/**, **/persistence/**, **/configuration/**, **/domain/**")
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
